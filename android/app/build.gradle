plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.gps_inf"
    // compileSdkVersion flutter.compileSdkVersion
    compileSdk = flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }


    sourceSets {
        main.java.srcDirs += 'src/main/java'
            main {
        jniLibs.srcDirs = ['libs']
     }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.gps_inf"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
                    // Configure NDK to support specific ABIs
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        android {
        defaultConfig {
            minSdkVersion 21
        }
        }
    }

    buildscript {
    repositories {
        google()
        jcenter()
    }

}


//多个签名文件可以新增debug，和release配置一样
signingConfigs {
    release {
        keyAlias localProperties['keyAlias']
        keyPassword localProperties['keyPassword']
        storeFile localProperties['storeFile'] ? file(localProperties['storeFile']) : null
        storePassword localProperties['storePassword']
    }
}

buildTypes {
    //多打一个debug包，可以用debug的签名文件，也可以不用
    debug {
        signingConfig signingConfigs.debug
    }
    release {
        signingConfig signingConfigs.release
        minifyEnabled false
        shrinkResources false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
}

}

flutter {
    source '../..'
}

dependencies {
    // Include all JARs in the 'libs' directory
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // implementation 'com.amap.api:3dmap-location-search:latest.integration'
    // implementation 'com.amap.api:3dmap-location-search:latest.integration'
    // AMap 3D map integration
    //  implementation 'com.amap.api:3dmap:10.0.800'

    // implementation 'com.amap.api:search:latest.integration'

    // implementation 'com.amap.api:location:latest.integration'
    // implementation 'com.amap.api:3dmap:3.0.0'
    // implementation 'com.amap.api:search:3.0.0'
    // Include all JARs in the 'libs' directory
    // implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AMap 3D map integration
    // implementation 'com.amap.api:3dmap:latest.integration'


}

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.gps_inf"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // sourceCompatibility JavaVersion.VERSION_1_8
        // targetCompatibility JavaVersion.VERSION_1_8
    }
    // lint {
    //       baseline = file("lint-baseline.xml")
    //   }
    sourceSets {
        main.java.srcDirs += 'src/main/java'
            main {
        jniLibs.srcDirs = ['libs']
     }
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    kotlinOptions {
        jvmTarget = '17'
        // jvmTarget = '1.8'
    }
    defaultConfig {
        applicationId "com.example.gps_inf"
        minSdkVersion 24
        targetSdkVersion 34
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        versionCode 1
        versionName "1.0"
    }

    buildscript {
    ext.kotlin_version = '2.0.21' // 将此处的版本号替换为最新的Kotlin版本
    repositories {
        google()
        // jcenter()
    }

}

signingConfigs {
    release {
        keyAlias localProperties['keyAlias']
        keyPassword localProperties['keyPassword']
        storeFile localProperties['storeFile'] ? file(localProperties['storeFile']) : null
        storePassword localProperties['storePassword']
    }
}

buildTypes {
    release {
        signingConfig signingConfigs.release
        minifyEnabled false
        shrinkResources false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
}

}

flutter {
    source '../..'
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

//禁用 shared_preferences_android 模块的测试
project(':shared_preferences_android') {
    tasks.withType(Test) {
        enabled = false
    }
}